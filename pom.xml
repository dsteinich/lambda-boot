<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.bbggr</groupId>
    <artifactId>lambda-boot</artifactId>
    <version>0.0.${revision}</version>


    <properties>
        <revision>0-SNAPSHOT</revision>
        <aws-lambda-events.version>2.2.7</aws-lambda-events.version>
        <aws-lambda-java-core.version>1.2.0</aws-lambda-java-core.version>
        <spring-cloud-function.version>3.0.1.RELEASE</spring-cloud-function.version>
        <spring-boot-thin.version>1.0.23.RELEASE</spring-boot-thin.version>
        <mybatis-spring-version>2.0.3</mybatis-spring-version>
        <mybatis-version>3.5.3</mybatis-version>
    </properties>


    <scm>
<!--         <connection>scm:git:https://github.com/dsteinich/lambda-boot.git</connection> -->
<!--         <developerConnection>scm:git:https://github.com/dsteinich/lambda-boot.git</developerConnection> -->
        <connection>scm:git:git@github.com:dsteinich/lambda-boot.git</connection>
        <developerConnection>scm:git:git@github.com:dsteinich/lambda-boot.git</developerConnection>
        <url>https://github.com/dsteinich/lambda-boot.git</url>
        <tag>HEAD</tag>
    </scm>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
    </parent>


    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-function-adapter-aws</artifactId>
            <version>${spring-cloud-function.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-events</artifactId>
            <version>${aws-lambda-events.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>${aws-lambda-java-core.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>net.postgis</groupId>
            <artifactId>postgis-jdbc</artifactId>
            <version>2.3.0</version>
        </dependency>


        <!-- TEST DEPENDENCIES-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
            <version>1.3.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot.experimental</groupId>
                        <artifactId>spring-boot-thin-layout</artifactId>
                        <version>${spring-boot-thin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>aws</shadedClassifierName>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.11.2</version>
                <configuration>
                    <tag>${project.artifactId}-${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <environmentVariables>
                        <AQTS_DATABASE_ADDRESS>${TESTING_DATABASE_ADDRESS}</AQTS_DATABASE_ADDRESS>
                        <AQTS_DATABASE_PORT>${TESTING_DATABASE_PORT}</AQTS_DATABASE_PORT>
                        <AQTS_DATABASE_NAME>database_name</AQTS_DATABASE_NAME>
                        <AQTS_SCHEMA_NAME>schema_name</AQTS_SCHEMA_NAME>
                        <AQTS_SCHEMA_OWNER_USERNAME>schema_owner</AQTS_SCHEMA_OWNER_USERNAME>
                        <AQTS_SCHEMA_OWNER_PASSWORD>changeMe</AQTS_SCHEMA_OWNER_PASSWORD>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.31.0</version>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
<!--                     <showLogs>true</showLogs> -->
                    <containerNamePattern>%a</containerNamePattern>
                    <images>
                        <image>
                            <name>usgswma/aqts_capture_db:ci</name>
                            <alias>wdfnDatabase</alias>
                            <run>
                                <network>
                                    <mode>custom</mode>
                                    <name>${TESTING_DATABASE_NETWORK}</name>
                                </network>
                                <ports>
                                    <port>${TESTING_DATABASE_PORT}:5432</port>
                                </ports>
                                <wait>
                                    <time>150000</time>
                                    <log>(?s)PostgreSQL init process complete; ready for start up.*database system is ready to accept connections</log>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>